extends ../layout-marketing

block content
	main.content.content-alt#main-content
		.container
			.row
				.col-md-6.col-md-offset-3.col-lg-4.col-lg-offset-4
					.card
						.page-header
							h1 #{translate("log_in")}
						form(data-ol-async-form, name="loginForm", action='/login', method="POST")
							input(name='_csrf', type='hidden', value=csrfToken)
							+formMessages()
							+customFormMessage('invalid-password-retry-or-reset', 'danger')
								| !{translate('email_or_password_wrong_try_again_or_reset', {}, [{ name: 'a', attrs: { href: '/user/password/reset', 'aria-describedby': 'resetPasswordDescription' } }])}
								span.sr-only(id='resetPasswordDescription')
									| #{translate('reset_password_link')}
							+customValidationMessage('password-compromised')
								| !{translate('password_compromised_try_again_or_use_known_device_or_reset', {}, [{name: 'a', attrs: {href: 'https://haveibeenpwned.com/passwords', rel: 'noopener noreferrer', target: '_blank'}}, {name: 'a', attrs: {href: '/user/password/reset', target: '_blank'}}])}.
							.form-group
								input.form-control(
									type='email',
									name='email',
									required,
									placeholder='email@example.com',
									autofocus="true"
								)
							.form-group
								input.form-control(
									type='password',
									name='password',
									required,
									placeholder='********',
								)
							.actions
								button.btn-primary.btn-block.btn(
									type='submit',
									data-ol-disabled-inflight
								)
									span(data-ol-inflight="idle") #{translate("login")}
									span(hidden data-ol-inflight="pending") #{translate("logging_in")}â€¦

							if settings.samlBypass.enabled
								p.login-register-hr-text-container.text-center
									span.login-register-hr-text.text-uppercase #{translate("or")}

								.actions
									p.login-register-text.text-center #{translate("work_or_university_sso")}

									+customFormMessage('sso-login-failure', 'danger')
										| !{translate('saml_login_failure')}
									script(nonce=scriptNonce).
										const searchParams = new URLSearchParams(window.location.search)
										if (searchParams.has('sso-login-failure')) {
											document.querySelector("div[data-ol-custom-form-message=sso-login-failure]").hidden = false;
										}

									a.website-redesign.btn-block.login-btn.btn(href='/sso-login')
										img.login-btn-icon(src=buildImgPath('/other-brands/logo_institution.svg') aria-hidden="true")
										| #{translate("login_with_service", {'service': settings.samlBypass.name})}

							p.login-register-hr-text-container

							p.login-register-text.text-center
								a(href='/user/password/reset') #{translate("forgot_your_password")}?
